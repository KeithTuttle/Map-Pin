{"version":3,"sources":["store/dispatcher.ts","store/UserStore.ts","store/actions/userActions.ts","viewModels/UserWithErrorMessage.ts","components/map.component.tsx","components/navbar.component.tsx","components/home.component.tsx","components/register-user.component.tsx","components/login-user.component.tsx","components/contact.component.tsx","App.tsx","index.tsx"],"names":["Dispatcher","userStore","user","console","log","username","this","emit","action","type","setUser","EventEmitter","register","handleActions","bind","dispatcher","dispatch","PinAction","User","pins","NavBar","props","clearUsername","state","localStorage","removeItem","setState","UserActions","on","name","getUser","undefined","className","to","style","color","onClick","React","Component","Map","popover","pin","Popover","id","Title","as","Content","lat","toFixed","long","getItem","description","handleUpdateShow","marginTop","marginRight","handleDeleteShow","updateViewport","viewport","prevState","resize","height","window","innerHeight","width","innerWidth","convertMarkers","markers","slice","forEach","push","OverlayTrigger","rootClose","trigger","placement","overlay","latitude","longitude","offsetLeft","offsetTop","currentPin","src","alt","removeMarkers","addPin","event","newPin","lngLat","axios","post","deleteMarker","arr","filter","marker","children","setPinActionAdd","setPinActionDelete","setPinActionUpdate","mapClickHandler","handleUpdateClose","handleDeleteClose","onNewDescriptionChange","updatePin","deletePin","pinAction","ADD","zoom","showUpdateModal","showDeleteModal","newDescription","value","addEventListener","get","then","response","data","removeEventListener","updatedPin","newPinList","p","MySwal","withReactContent","Swal","fire","DELETE","UPDATE","alert","mapboxApiAccessToken","process","onViewportChange","v","Modal","show","onHide","Header","closeButton","Body","placeholder","onChange","e","target","Footer","Button","variant","Home","result","catch","err","getUserFromLocalStorage","RegisterUser","onChangeUsername","onChangePassword","onSubmit","password","redirect","usernameError","preventDefault","error","includes","setItem","marginLeft","required","length","fontWeight","paddingBottom","LoginUser","users","wrongUsername","wrongPassword","pathname","ContactUs","onChangeFirstName","onChangeLastName","onChangeEmail","onChangeMessage","firstName","lastName","email","message","status","method","url","buttonText","htmlFor","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4eae70da.chunk.js","sourcesContent":["import { Dispatcher } from \"flux\";\r\n\r\nexport default new Dispatcher;","import { EventEmitter } from 'events';\r\nimport { User } from '../viewModels/UserWithErrorMessage';\r\nimport Dispatcher from './dispatcher';\r\n\r\nclass UserStore extends EventEmitter {\r\n    user: User | null = null;\r\n     constructor(){\r\n         super();\r\n     }\r\n\r\n     setUser(user: User | null){\r\n         console.log(\"setting user to: \" + user?.username);\r\n        this.user = user;\r\n\r\n        this.emit(\"change\");\r\n     }\r\n\r\n     getUser(){\r\n         console.log(\"getting the user\");\r\n         return this.user;\r\n     }\r\n\r\n     //not type safe\r\n     handleActions(action: any){\r\n        switch(action.type){\r\n            case \"SET_USER\": {\r\n                this.setUser(action.user);\r\n            }\r\n        }\r\n     }\r\n}\r\n\r\nconst userStore = new UserStore;\r\nDispatcher.register(userStore.handleActions.bind(userStore));\r\n\r\nexport default userStore;\r\n","import { User } from \"../../viewModels/UserWithErrorMessage\";\r\nimport dispatcher from \"../dispatcher\";\r\n\r\nexport function setUser(user: User) {\r\n    dispatcher.dispatch({\r\n        type: \"SET_USER\",\r\n        user,\r\n    });\r\n}","import Pin from './Pin'\r\n\r\nexport class UserWithErrorMessage{\r\n    user: User | null = null;\r\n    error: string = \"\";\r\n}\r\n\r\nexport class User {\r\n    username: string = \"\";\r\n    pins: Array<Pin> = []\r\n}","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { Button, Modal, OverlayTrigger, Popover } from 'react-bootstrap';\r\nimport ReactMapGL, { NavigationControl, Marker, MapEvent } from 'react-map-gl';\r\nimport Pin from '../viewModels/Pin';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\n//mapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default;\r\n\r\nenum PinAction { ADD, DELETE, UPDATE};\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface Viewport {\r\n    height: number,\r\n    latitude: number,\r\n    longitude: number,\r\n    width: number,\r\n    zoom: number,\r\n}\r\n\r\ninterface MapState {\r\n    pinAction: PinAction,\r\n    viewport: Viewport\r\n    pins: Pin[],\r\n    markers: any[],\r\n    showUpdateModal: boolean,\r\n    showDeleteModal: boolean,\r\n    newDescription: string,\r\n    currentPin: Pin | null\r\n}\r\n\r\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN || '';\r\n\r\nexport default class Map extends React.Component<IProps, MapState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        \r\n        this.setPinActionAdd = this.setPinActionAdd.bind(this);\r\n        this.setPinActionDelete = this.setPinActionDelete.bind(this);\r\n        this.setPinActionUpdate = this.setPinActionUpdate.bind(this);\r\n        this.mapClickHandler = this.mapClickHandler.bind(this);\r\n        this.handleUpdateShow = this.handleUpdateShow.bind(this);\r\n        this.handleUpdateClose = this.handleUpdateClose.bind(this);\r\n        this.handleDeleteShow = this.handleDeleteShow.bind(this);\r\n        this.handleDeleteClose = this.handleDeleteClose.bind(this);\r\n        this.onNewDescriptionChange = this.onNewDescriptionChange.bind(this);\r\n        this.updatePin = this.updatePin.bind(this);\r\n        this.deletePin = this.deletePin.bind(this);\r\n    \r\n        this.state = {\r\n            pinAction: PinAction.ADD,\r\n            viewport: {\r\n                height: 400,\r\n                latitude: 39.4018552,\r\n                longitude: -76.602388,\r\n                width: 400,\r\n                zoom: 14,\r\n            },\r\n            pins: [],\r\n            markers: [],\r\n            showUpdateModal: false,\r\n            showDeleteModal: false,\r\n            newDescription: \"\",\r\n            currentPin: null\r\n        }\r\n    }\r\n\r\n    popover = (pin: Pin) => (\r\n        <Popover id=\"popover-basic\">\r\n          <Popover.Title as=\"h3\">Details</Popover.Title>\r\n          <Popover.Content>\r\n            Latitude: {pin.lat.toFixed(4)}\r\n            <br />\r\n            Longitude: {pin.long.toFixed(4)}\r\n            <br />\r\n            Current User: {localStorage.getItem(\"user\")}\r\n            <br />\r\n            <span>Description: {pin.description}</span>\r\n            <br />\r\n            <button className=\"btn btn-danger\" onClick={this.handleUpdateShow} style={{marginTop: \"10px\", marginRight: \"10px\"}} type=\"button\">Update</button>\r\n            <button className=\"btn btn-danger\" onClick={this.handleDeleteShow} style={{marginTop: \"10px\", marginRight: \"10px\"}} type=\"button\">Delete</button>\r\n          </Popover.Content>\r\n        </Popover>\r\n    );\r\n\r\n    handleUpdateShow(){\r\n        this.setState({\r\n            showUpdateModal: true,\r\n        });\r\n    }\r\n    handleUpdateClose(){\r\n        this.setState({\r\n            showUpdateModal: false\r\n        });\r\n    }\r\n    handleDeleteShow(){\r\n        this.setState({\r\n            showDeleteModal: true,\r\n        });\r\n    }\r\n    handleDeleteClose(){\r\n        this.setState({\r\n            showDeleteModal: false\r\n        });\r\n    }\r\n\r\n    onNewDescriptionChange(value: string){\r\n        this.setState({\r\n            newDescription: value\r\n        })\r\n    }\r\n\r\n    public componentDidMount() {\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        window.addEventListener('resize', this.resize);\r\n        this.resize();\r\n        axios.get(path+'/users/username/' + localStorage.getItem(\"user\"))\r\n            .then(response => {\r\n                console.log(response.data)\r\n                this.setState({\r\n                    pins: response.data.pins\r\n                })\r\n                this.convertMarkers();\r\n            })\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        window.removeEventListener('resize', this.resize);\r\n    }\r\n\r\n    public updateViewport = (viewport: Viewport) => {\r\n        this.setState(prevState => ({\r\n            viewport: { ...prevState.viewport, ...viewport },\r\n        }));\r\n    };\r\n\r\n    public resize = () => {\r\n        this.setState(prevState => ({\r\n            viewport: {\r\n                ...prevState.viewport,\r\n                height: window.innerHeight,\r\n                width: window.innerWidth,\r\n            },\r\n        }));\r\n    };\r\n\r\n    public convertMarkers = () => {\r\n        const markers = this.state.markers.slice();\r\n        this.state.pins.forEach(\r\n            (pin: Pin) => markers.push(\r\n                <OverlayTrigger rootClose trigger=\"click\" placement=\"bottom\" overlay={this.popover(pin)}>\r\n                    <Marker latitude={pin.lat} longitude={pin.long} offsetLeft={-20} offsetTop={-10}>\r\n                        <img onClick={() => this.setState({ currentPin: pin})} className=\"imageHover\" src=\"/assets/pin.jpg\" alt=\"Here\" style={{width: 35, height: 35}}/>\r\n                    </Marker>\r\n                </OverlayTrigger>\r\n            ))\r\n        this.setState({\r\n            markers: markers\r\n        })\r\n    }\r\n\r\n    public removeMarkers = () => {\r\n        var markers: any[] = [];\r\n        this.state.pins.forEach(\r\n            (pin: Pin) => markers.push(\r\n                <OverlayTrigger rootClose trigger=\"click\" placement=\"bottom\" overlay={this.popover(pin)}>\r\n                    <Marker latitude={pin.lat} longitude={pin.long} offsetLeft={-20} offsetTop={-10}>\r\n                        <img onClick={() => this.setState({ currentPin: pin})} className=\"imageHover\" src=\"/assets/pin.jpg\" alt=\"Here\" style={{width: 35, height: 35}}/>\r\n                    </Marker>\r\n                </OverlayTrigger>\r\n            ))\r\n        this.setState({\r\n            markers: markers\r\n        })\r\n    }\r\n\r\n    public addPin = (event: MapEvent) => {\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        const pins = this.state.pins.slice();\r\n        var newPin: Pin = {\r\n            name: `lng${event.lngLat[0]}`,\r\n            lat: event.lngLat[1],\r\n            long: event.lngLat[0],\r\n            description: 'Edit me!'\r\n        }\r\n        pins.push(newPin)\r\n        axios.post(path+'/users/update/username/' + localStorage.getItem(\"user\"), \r\n            {\r\n                username: localStorage.getItem(\"user\"),\r\n                pins: pins\r\n            })\r\n        this.setState({\r\n            pins: pins\r\n            })\r\n        this.convertMarkers();\r\n    }\r\n\r\n    public deleteMarker = (arr: number[]) => {\r\n        this.setState( prevState => ({\r\n            markers: prevState.markers.filter(marker => marker.props.children.props.longitude !== arr[0] && marker.props.children.props.latitude !== arr[1])\r\n        }))\r\n    }\r\n\r\n    updatePin(){\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        if(this.state.currentPin != undefined){\r\n            var updatedPin: Pin = {\r\n                description: this.state.newDescription,\r\n                lat: this.state.currentPin.lat,\r\n                long: this.state.currentPin.long,\r\n                name: 'temporary'\r\n            }\r\n            var newPinList: Pin[] = this.state.pins.filter(p => p.lat !== updatedPin.lat && p.long !== updatedPin.long);\r\n            newPinList.push(updatedPin);\r\n            const MySwal = withReactContent(Swal)\r\n            axios.post(path+'/users/update/username/' + localStorage.getItem(\"user\"), \r\n            {\r\n                username: localStorage.getItem(\"user\"),\r\n                pins: newPinList\r\n            }).then((response) => {\r\n                this.setState({\r\n                    pins: newPinList\r\n                })\r\n                this.convertMarkers();\r\n                this.handleUpdateClose();\r\n                this.setState({\r\n                    currentPin: null,\r\n                    newDescription: \"\"\r\n                })\r\n                return MySwal.fire(<p>Pin Updated!</p>,<span><div>Your pin description has been updated to:</div><b>{updatedPin.description}</b></span>, \"success\");\r\n            });\r\n        }\r\n    }\r\n\r\n    deletePin(){\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        if(this.state.currentPin != undefined){\r\n            var updatedPin: Pin = {\r\n                description: this.state.currentPin.description,\r\n                lat: this.state.currentPin.lat,\r\n                long: this.state.currentPin.long,\r\n                name: 'temporary'\r\n            }\r\n            console.log(\"CURRENT PINS:\");\r\n            console.log(this.state.pins);\r\n            var newPinList: Pin[] = this.state.pins.filter(p => p.lat !== updatedPin.lat && p.long !== updatedPin.long);\r\n            const MySwal = withReactContent(Swal)\r\n            axios.post(path+'/users/update/username/' + localStorage.getItem(\"user\"), \r\n            {\r\n                username: localStorage.getItem(\"user\"),\r\n                pins: newPinList\r\n            }).then((response) => {\r\n                this.setState({\r\n                    pins: newPinList\r\n                })\r\n                this.handleDeleteClose();\r\n                this.setState({\r\n                    currentPin: null,\r\n                    newDescription: \"\"\r\n                });\r\n                console.log(\"New PINS:\");\r\n                console.log(this.state.pins);\r\n                this.removeMarkers();\r\n                return MySwal.fire(<p>Pin Deleted!</p>,<span><div>Your pin has successfully been deleted!</div></span>, \"success\");\r\n            });\r\n        }\r\n    }\r\n\r\n    setPinActionAdd(){\r\n        this.setState({\r\n            pinAction: PinAction.ADD\r\n        })\r\n    }\r\n\r\n    setPinActionDelete(){\r\n        this.setState({\r\n            pinAction: PinAction.DELETE\r\n        })\r\n    }\r\n\r\n    setPinActionUpdate(){\r\n        this.setState({\r\n            pinAction: PinAction.UPDATE\r\n        })\r\n    }\r\n\r\n    mapClickHandler(event: MapEvent){\r\n        if(this.state.pinAction === PinAction.ADD){\r\n            this.addPin(event);\r\n        }\r\n        if(this.state.pinAction === PinAction.DELETE){\r\n            var lngLat = [event.lngLat[0], event.lngLat[1]];\r\n            this.deleteMarker(lngLat);\r\n            alert(\"Send to delete method\")\r\n        }\r\n        if(this.state.pinAction === PinAction.UPDATE){\r\n            alert(\"Send to update method\")\r\n        }\r\n    }\r\n    \r\n    public render() {\r\n        const { viewport } = this.state;\r\n         return (\r\n             <span>\r\n                <ReactMapGL\r\n                        {...viewport}\r\n                        className=\"map-size\"\r\n                        mapboxApiAccessToken={MAPBOX_TOKEN}\r\n                        onViewportChange={(v: Viewport) => this.updateViewport(v)}\r\n                        onClick={(event: MapEvent) => this.mapClickHandler(event)}\r\n                    >\r\n                        {this.state.markers}\r\n                        <div>\r\n                            <NavigationControl onViewportChange={this.updateViewport} />\r\n                        </div>\r\n                    </ReactMapGL>\r\n\r\n                    <Modal show={this.state.showUpdateModal} onHide={this.handleUpdateClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Update Pin Information</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div>Update the description of your pin:</div>\r\n                            <input type=\"text\"\r\n                                   placeholder={this.state.currentPin?.description}\r\n                                   value={this.state.newDescription}\r\n                                   onChange={e => this.onNewDescriptionChange(e.target.value)}></input>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={this.handleUpdateClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={this.updatePin}>\r\n                                Save Changes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal show={this.state.showDeleteModal} onHide={this.handleDeleteClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Delete Pin</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <b>Are you sure you want to delete this pin?</b>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={this.handleDeleteClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"danger\" onClick={this.deletePin}>\r\n                                Delete\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n            </span>\r\n            );\r\n        }\r\n    }","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport userStore from '../store/UserStore';\r\nimport * as UserActions from '../store/actions/userActions';\r\nimport { User } from '../viewModels/UserWithErrorMessage';\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\n// defines the type of the state\r\ninterface NavState {\r\n    username: string;\r\n}\r\n\r\nexport default class NavBar extends React.Component<IProps, NavState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.clearUsername = this.clearUsername.bind(this);\r\n        this.state = {\r\n            username: '',\r\n        }\r\n    }\r\n\r\n    clearUsername(){\r\n        localStorage.removeItem(\"user\");\r\n        this.setState({\r\n            username: \"\"\r\n        });\r\n        var user = new User();\r\n        user.username = '';\r\n        UserActions.setUser(user);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.setState({\r\n        //     username: localStorage.getItem(\"user\")+''\r\n        // })\r\n        userStore.on(\"change\", () => {\r\n            var name = userStore.getUser()?.username;\r\n            if (name == undefined) {\r\n                name = '';\r\n            }\r\n            this.setState({\r\n                username: name\r\n            })\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <nav className=\"container topnav navbar navbar-dark bg-dark navbar-expand-lg\">\r\n                <NavLink to=\"/\" className=\"main_title navbar-brand\">MapPin</NavLink>\r\n                <div className=\"collpase navbar-collapse\">\r\n                {this.state.username == '' &&\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"navbar-item\">\r\n                            <NavLink style={{color: 'white'}} to=\"/contact\" className=\"nav-link\">Contact Us </NavLink>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <NavLink style={{color: 'white'}} to=\"/register\" className=\"nav-link\">Register</NavLink>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <NavLink style={{color: 'white'}} to=\"/login\" className=\"nav-link\">Log-In</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                }\r\n                {this.state.username != '' &&\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"navbar-item\">\r\n                            <NavLink style={{color: 'white'}} to=\"/contact\" className=\"nav-link\">Contact Us </NavLink>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <NavLink style={{color: 'white'}} to=\"/login\" className=\"nav-link\" onClick={this.clearUsername}> Logout {this.state.username}</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                }\r\n                    \r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Map from './map.component';\r\nimport EditPin from './edit-pin.component';\r\nimport { Redirect } from 'react-router-dom';\r\nimport userStore from '../store/UserStore';\r\nimport * as UserActions from '../store/actions/userActions';\r\nimport axios from 'axios';\r\nimport { User } from '../viewModels/UserWithErrorMessage';\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\n// defines the type of the state\r\ninterface HomeState {\r\n    username: string | undefined;\r\n}\r\n\r\nexport default class Home extends React.Component<IProps, HomeState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            username: userStore.getUser()?.username\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        userStore.on(\"change\", () => {\r\n            let name = userStore.getUser()?.username;\r\n            if (name == undefined) {\r\n                console.log(\"home name is undefined - in if\")\r\n                this.setState({\r\n                    username: ''\r\n                });\r\n            }\r\n            else{\r\n                console.log(\"home set the state\");\r\n                this.setState({\r\n                    username: name\r\n                });\r\n                console.log(\"home state: \" + this.state.username);\r\n            }\r\n            \r\n        });\r\n    }\r\n\r\n    getUserFromLocalStorage(username: string){\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        console.log(\"getting user from local storage\")\r\n        axios.get<User>(`${path}/users/username/${username}`)\r\n            .then(result => {\r\n                console.log(\"result from getting user from local storage: \" + result.data);\r\n                UserActions.setUser(result.data);\r\n                console.log(userStore.getUser);\r\n            })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    render(){\r\n        if ((this.state.username == \"\" \r\n        || this.state.username == undefined \r\n        || this.state.username == null)\r\n        && localStorage.getItem(\"user\") == null) {\r\n            return (\r\n                <Redirect push to='/register' />\r\n            );\r\n        }\r\n        else {\r\n            var username = localStorage.getItem(\"user\");\r\n            if(username != null && userStore.getUser() == null){\r\n                this.getUserFromLocalStorage(username);\r\n            }\r\n            return (\r\n                <div id=\"mapbox\" className=\"text-center\">\r\n                        <Map></Map>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React, { Component, TextareaHTMLAttributes } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { UserWithErrorMessage } from '../viewModels/UserWithErrorMessage';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport * as UserActions from '../store/actions/userActions';\r\n\r\n// defines the type of the props, if any. could also pass in {}\r\ninterface IProps {\r\n\r\n}\r\n\r\n// defines the type of the state\r\ninterface RegisterState {\r\n    username: string;\r\n    password: string;\r\n    redirect: boolean;\r\n    usernameError: string;\r\n}\r\n\r\nclass RegisterUser extends React.Component<IProps, RegisterState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    \r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            redirect: false,\r\n            usernameError: ''\r\n        }\r\n    }\r\n\r\n    onChangeUsername(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            username: target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            password: target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(event: React.FormEvent){\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        event.preventDefault();\r\n        this.setState({\r\n            usernameError: ''\r\n        })\r\n        const MySwal = withReactContent(Swal);\r\n        const user = { \r\n            username: this.state.username, \r\n            password: this.state.password \r\n        }\r\n        try{\r\n            axios.post<UserWithErrorMessage>(path+'/users/add', user)\r\n            .then(result => {\r\n                console.log(result.data)\r\n                if(result.data.error !== \"\"){\r\n                    if(result.data.error.includes(\"username is taken\")){\r\n                        this.setState({usernameError: result.data.error});\r\n                    }\r\n                    else {\r\n                        return MySwal.fire(<p>Login Failed</p>,<span>{result.data.error}</span>, \"error\");\r\n                    }\r\n                }\r\n                else if(result.data.user === null){\r\n                    return MySwal.fire(<p>Registration Failed</p>,<span>unexpected error occured</span>, \"error\");\r\n                }\r\n                else{\r\n                    UserActions.setUser(result.data.user);\r\n                    localStorage.setItem('user', result.data.user.username);\r\n                    this.setState({\r\n                        redirect: true\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n        catch (err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\" style={{marginLeft: 'auto', marginRight: 'auto', width: '30%'}}>\r\n                { this.state.redirect ? (<Redirect push to='/'/>) : null }\r\n                <h3>Create Account</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\"> \r\n                    <label>Username: </label>\r\n                    <input  type=\"text\"\r\n                        style={{width: '90%'}}\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.username}\r\n                        onChange={this.onChangeUsername}\r\n                        />\r\n                        {this.state.usernameError.length > 0 &&\r\n                        <div style={{color: 'red', fontWeight: 'bold', paddingBottom: '10px'}}>\r\n                            {this.state.usernameError}\r\n                        </div>\r\n                    }\r\n                    <label>Password: </label>\r\n                    <input  type=\"password\"\r\n                        style={{width: '90%'}}\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChangePassword}\r\n                        />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"submit\" value=\"Register\" className=\"btn btn-primary\" />\r\n                </div>\r\n                </form>\r\n            </div>\r\n        );      \r\n    }\r\n}\r\n\r\nexport default RegisterUser;","import React, { Component, TextareaHTMLAttributes } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { UserWithErrorMessage } from '../viewModels/UserWithErrorMessage';\r\nimport * as UserActions from '../store/actions/userActions';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\n// defines the type of the props, if any. could also pass in {}\r\ninterface IProps {\r\n\r\n}\r\n\r\n// defines the type of the state\r\ninterface LoginState {\r\n    username: string;\r\n    password: string;\r\n    users: { _id: string, username: string, password: string } [];\r\n    redirect: boolean;\r\n    wrongUsername: string;\r\n    wrongPassword: string;\r\n}\r\n\r\nclass LoginUser extends React.Component<IProps, LoginState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        \r\n\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    \r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            users: [],\r\n            redirect: false,\r\n            wrongUsername: '',\r\n            wrongPassword: ''\r\n        }\r\n    }\r\n\r\n    onChangeUsername(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            username: target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            password: target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(event: React.FormEvent){\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        event.preventDefault();\r\n        this.setState({wrongPassword: \"\", wrongUsername: \"\"});\r\n\r\n        const user = { \r\n            username: this.state.username, \r\n            password: this.state.password \r\n        }\r\n\r\n        axios.post<UserWithErrorMessage>(path+'/users/login', user)\r\n            .then(result => {\r\n                console.log(result);\r\n                if(result.data.error !== \"\"){\r\n                    if(result.data.error.includes(\"Username\")){\r\n                        this.setState({wrongUsername: result.data.error});\r\n                    }\r\n                    if(result.data.error.includes(\"Password\")){\r\n                        this.setState({wrongPassword: result.data.error});\r\n                    }\r\n                }\r\n                else if(result.data.user === null){\r\n                    const MySwal = withReactContent(Swal);\r\n                    return MySwal.fire(<p>Login Failed</p>,<span>User was not found</span>, \"error\");\r\n                }\r\n                else{\r\n                    UserActions.setUser(result.data.user);\r\n                    localStorage.setItem('user', result.data.user?.username);\r\n                    this.setState({\r\n                        redirect: true\r\n                    });\r\n                }\r\n            })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\" style={{marginLeft: 'auto', marginRight: 'auto', width: '30%'}}>\r\n                { this.state.redirect ? (<Redirect to={{pathname: \"/\" }}/>) : null }\r\n                <h3>Sign in to Your Account</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\"> \r\n                    <label>Username: </label>\r\n                    <input  type=\"text\"\r\n                        style={{width: '90%'}}\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.username}\r\n                        onChange={this.onChangeUsername}\r\n                        />\r\n                    {this.state.wrongUsername.length > 0 &&\r\n                        <div style={{color: 'red', fontWeight: 'bold', paddingBottom: '10px'}}>\r\n                            {this.state.wrongUsername}\r\n                        </div>\r\n                    }\r\n                    <label>Password: </label>\r\n                    <input  type=\"password\"\r\n                        style={{width: '90%'}}\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChangePassword}\r\n                        />\r\n                    {this.state.wrongPassword.length > 0 &&\r\n                        <div style={{color: 'red', fontWeight: 'bold', paddingBottom: '10px'}}>\r\n                            {this.state.wrongPassword}\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\" />\r\n                </div>\r\n                </form>\r\n            </div>\r\n        );      \r\n    }\r\n}\r\n\r\nexport default LoginUser;","import axios from 'axios';\r\nimport React from 'react';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\n// defines the type of the props, if any. could also pass in {}\r\ninterface IProps {\r\n\r\n}\r\n\r\n// defines the type of the state\r\nclass ContactState {\r\n    firstName = \"\";\r\n    lastName = \"\";\r\n    email = \"\";\r\n    message = \"\";\r\n    status= \"\";\r\n}\r\n\r\nclass ContactUs extends React.Component<IProps, ContactState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\r\n        this.onChangeLastName = this.onChangeLastName.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangeMessage = this.onChangeMessage.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            message: '',\r\n            status: \"Submit\"\r\n        }\r\n\r\n    }\r\n\r\n    onChangeFirstName(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            firstName: target.value\r\n        });\r\n    }\r\n\r\n    onChangeLastName(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            lastName: target.value\r\n        });\r\n    }\r\n\r\n    onChangeEmail(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            email: target.value\r\n        });\r\n    }\r\n\r\n    onChangeMessage(event: React.FormEvent<HTMLTextAreaElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            message: target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(event: React.FormEvent){\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        event.preventDefault();\r\n        const MySwal = withReactContent(Swal)\r\n        this.setState({ status: \"Sending\" });  \r\n        axios({\r\n          method: \"POST\",\r\n          url: path+\"/users/contact\",\r\n          data: this.state,\r\n        }).then((response) => {\r\n          if (response.data.status === \"sent\") {\r\n            this.setState({ firstName: \"\", lastName: \"\", email: \"\", message: \"\", status: \"Submit\" });\r\n            return MySwal.fire(<p>Message Sent!</p>,<span>Thank you for your email, we look forward to hearing from you!</span>, \"success\");\r\n          } else if (response.data.status === \"failed\") {\r\n            return MySwal.fire(<p>Message Failed!</p>,<span>Uh oh! Something went wrong and we did not recieve your message</span>, \"error\");\r\n          }\r\n        });\r\n      }\r\n\r\n    render(){\r\n        let buttonText = this.state.status;\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"title\">\r\n                    <h1 className=\"page_title\">Contact the&nbsp;</h1>\r\n                    <h1 className=\"main_title\">Map-Pin</h1>\r\n                    <h1 className=\"page_title\">&nbsp;Team</h1>\r\n                </div>\r\n                <div style={{marginTop: \"18px\"}}>\r\n                <div className=\"inner_navcontainer\">\r\n                    <div className=\"inner_contactcontainer\">\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <label htmlFor=\"fname\">First Name</label>\r\n                            <input type=\"text\" \r\n                            id=\"fname\" \r\n                            name=\"firstname\" \r\n                            placeholder=\"Your first name...\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.firstName}\r\n                            onChange={this.onChangeFirstName}></input>\r\n\r\n                            <label htmlFor=\"lname\">Last Name</label>\r\n                            <input type=\"text\" \r\n                            id=\"lname\" \r\n                            name=\"lastname\" \r\n                            placeholder=\"Your last name...\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.lastName}\r\n                            onChange={this.onChangeLastName}></input>\r\n\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                            <input type=\"email\" \r\n                            id=\"email\" \r\n                            name=\"email\" \r\n                            placeholder=\"Your e-mail...\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.email}\r\n                            onChange={this.onChangeEmail}></input>\r\n\r\n                            <label htmlFor=\"message\">What do you need to share?</label>\r\n                            <textarea id=\"message\" \r\n                            name=\"message\" \r\n                            placeholder=\"Write your message here...\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.message}\r\n                            onChange={this.onChangeMessage}></textarea>\r\n\r\n                            <button type=\"submit\" style={{marginTop: \"20px\"}}>{buttonText}</button>\r\n                            \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );      \r\n    }\r\n}\r\n\r\nexport default ContactUs;","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nimport Navbar from \"./components/navbar.component\";\r\nimport Home from \"./components/home.component\";\r\nimport RegisterUser from \"./components/register-user.component\";\r\nimport LoginUser from \"./components/login-user.component\";\r\nimport ContactUs from \"./components/contact.component\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <br/>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/register\" exact component={RegisterUser} />\r\n      <Route path=\"/login\" exact component={LoginUser} />\r\n      <Route path=\"/contact\" exact component={ContactUs} />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}