{"version":3,"sources":["store/dispatcher.ts","store/UserStore.ts","store/actions/userActions.ts","viewModels/UserWithErrorMessage.ts","components/map.component.tsx","components/navbar.component.tsx","components/edit-pin.component.tsx","components/home.component.tsx","components/register-user.component.tsx","components/login-user.component.tsx","components/contact.component.tsx","App.tsx","index.tsx"],"names":["Dispatcher","userStore","user","console","log","username","this","emit","action","type","setUser","EventEmitter","register","handleActions","bind","dispatcher","dispatch","PinAction","User","pins","NavBar","props","clearUsername","state","localStorage","removeItem","setState","UserActions","on","name","getUser","undefined","className","to","style","color","onClick","React","Component","popover","latitude","longitude","Popover","id","Title","as","Content","toFixed","getItem","Map","updateViewport","viewport","prevState","resize","height","window","innerHeight","width","innerWidth","convertMarkers","markers","slice","forEach","pin","push","OverlayTrigger","rootClose","trigger","placement","overlay","lat","long","offsetLeft","offsetTop","src","alt","addPin","event","newPin","lngLat","description","axios","post","deleteMarker","arr","filter","marker","children","setPinActionAdd","setPinActionDelete","setPinActionUpdate","mapClickHandler","pinAction","ADD","zoom","addEventListener","get","then","response","data","removeEventListener","DELETE","UPDATE","alert","marginTop","marginRight","marginLeft","mapboxApiAccessToken","process","onViewportChange","v","EditPin","Button","variant","Home","result","catch","err","getUserFromLocalStorage","RegisterUser","onChangeUsername","onChangePassword","onSubmit","password","redirect","usernameError","target","value","preventDefault","MySwal","withReactContent","Swal","error","includes","fire","setItem","required","onChange","length","fontWeight","paddingBottom","LoginUser","users","wrongUsername","wrongPassword","pathname","ContactUs","onChangeFirstName","onChangeLastName","onChangeEmail","onChangeMessage","firstName","lastName","email","message","status","method","url","buttonText","htmlFor","placeholder","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a799411.chunk.js","sourcesContent":["import { Dispatcher } from \"flux\";\r\n\r\nexport default new Dispatcher;","import { EventEmitter } from 'events';\r\nimport { User } from '../viewModels/UserWithErrorMessage';\r\nimport Dispatcher from './dispatcher';\r\n\r\nclass UserStore extends EventEmitter {\r\n    user: User | null = null;\r\n     constructor(){\r\n         super();\r\n     }\r\n\r\n     setUser(user: User | null){\r\n         console.log(\"setting user to: \" + user?.username);\r\n        this.user = user;\r\n\r\n        this.emit(\"change\");\r\n     }\r\n\r\n     getUser(){\r\n         console.log(\"getting the user\");\r\n         return this.user;\r\n     }\r\n\r\n     //not type safe\r\n     handleActions(action: any){\r\n        switch(action.type){\r\n            case \"SET_USER\": {\r\n                this.setUser(action.user);\r\n            }\r\n        }\r\n     }\r\n}\r\n\r\nconst userStore = new UserStore;\r\nDispatcher.register(userStore.handleActions.bind(userStore));\r\n\r\nexport default userStore;\r\n","import { User } from \"../../viewModels/UserWithErrorMessage\";\r\nimport dispatcher from \"../dispatcher\";\r\n\r\nexport function setUser(user: User) {\r\n    dispatcher.dispatch({\r\n        type: \"SET_USER\",\r\n        user,\r\n    });\r\n}","import Pin from './Pin'\r\n\r\nexport class UserWithErrorMessage{\r\n    user: User | null = null;\r\n    error: string = \"\";\r\n}\r\n\r\nexport class User {\r\n    username: string = \"\";\r\n    pins: Array<Pin> = []\r\n}","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { Button, OverlayTrigger, Popover } from 'react-bootstrap';\r\nimport ReactMapGL, { NavigationControl, Marker, MapEvent } from 'react-map-gl';\r\nimport Pin from '../viewModels/Pin';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\n//mapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default;\r\n\r\nconst popover = (latitude: number, longitude: number) => (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Title as=\"h3\">Popover bottom</Popover.Title>\r\n      <Popover.Content>\r\n        Latitude: {latitude.toFixed(2)}\r\n        <br />\r\n        Longitude: {longitude.toFixed(2)}\r\n        <br />\r\n        Current User: {localStorage.getItem(\"user\")}\r\n      </Popover.Content>\r\n    </Popover>\r\n);\r\n\r\nenum PinAction { ADD, DELETE, UPDATE};\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface Viewport {\r\n    height: number,\r\n    latitude: number,\r\n    longitude: number,\r\n    width: number,\r\n    zoom: number,\r\n}\r\n\r\ninterface MapState {\r\n    pinAction: PinAction,\r\n    viewport: Viewport\r\n    pins: Pin[],\r\n    markers: any[]\r\n}\r\n\r\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN || '';\r\n\r\nexport default class Map extends React.Component<IProps, MapState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        \r\n        this.setPinActionAdd = this.setPinActionAdd.bind(this);\r\n        this.setPinActionDelete = this.setPinActionDelete.bind(this);\r\n        this.setPinActionUpdate = this.setPinActionUpdate.bind(this);\r\n        this.mapClickHandler = this.mapClickHandler.bind(this);\r\n    \r\n        this.state = {\r\n            pinAction: PinAction.ADD,\r\n            viewport: {\r\n                height: 400,\r\n                latitude: 39.4018552,\r\n                longitude: -76.602388,\r\n                width: 400,\r\n                zoom: 14,\r\n            },\r\n            pins: [],\r\n            markers: [\r\n                <OverlayTrigger rootClose trigger=\"click\" placement=\"bottom\" overlay={popover(39.406, -76.610)}>\r\n                    <Marker latitude={39.406} longitude={-76.610} offsetLeft={-20} offsetTop={-10}>\r\n                        <img className=\"imageHover\" src=\"/assets/pin.jpg\" alt=\"Here\" style={{width: 35, height: 35}}/>\r\n                    </Marker>\r\n                </OverlayTrigger>\r\n            ]\r\n        }\r\n    }\r\n\r\n    public componentDidMount() {\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        window.addEventListener('resize', this.resize);\r\n        this.resize();\r\n        axios.get(path+'/users/username/' + localStorage.getItem(\"user\"))\r\n            .then(response => {\r\n                console.log(response.data)\r\n                this.setState({\r\n                    pins: response.data.pins\r\n                })\r\n                this.convertMarkers();\r\n            })\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        window.removeEventListener('resize', this.resize);\r\n    }\r\n\r\n    public updateViewport = (viewport: Viewport) => {\r\n        this.setState(prevState => ({\r\n            viewport: { ...prevState.viewport, ...viewport },\r\n        }));\r\n    };\r\n\r\n    public resize = () => {\r\n        this.setState(prevState => ({\r\n            viewport: {\r\n                ...prevState.viewport,\r\n                height: window.innerHeight,\r\n                width: window.innerWidth,\r\n            },\r\n        }));\r\n    };\r\n\r\n    public convertMarkers = () => {\r\n        const markers = this.state.markers.slice();\r\n        this.state.pins.forEach(\r\n            (pin: Pin) => markers.push(\r\n                <OverlayTrigger rootClose trigger=\"click\" placement=\"bottom\" overlay={popover(pin.lat, pin.long)}>\r\n                    <Marker latitude={pin.lat} longitude={pin.long} offsetLeft={-20} offsetTop={-10}>\r\n                        <img className=\"imageHover\" src=\"/assets/pin.jpg\" alt=\"Here\" style={{width: 35, height: 35}}/>\r\n                    </Marker>\r\n                </OverlayTrigger>\r\n            ))\r\n        this.setState({\r\n            markers: markers\r\n        })\r\n    }\r\n\r\n    public addPin = (event: MapEvent) => {\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        const pins = this.state.pins.slice();\r\n        var newPin: Pin = {\r\n            name: 'temporary',\r\n            lat: event.lngLat[1],\r\n            long: event.lngLat[0],\r\n            description: 'temporary'\r\n        }\r\n        pins.push(newPin)\r\n        axios.post(path+'/users/update/username/' + localStorage.getItem(\"user\"), \r\n            {\r\n                username: localStorage.getItem(\"user\"),\r\n                pins: pins\r\n            })\r\n        this.setState({\r\n            pins: pins\r\n            })\r\n        this.convertMarkers();\r\n    }\r\n\r\n    public deleteMarker = (arr: number[]) => {\r\n        this.setState( prevState => ({\r\n            markers: prevState.markers.filter(marker => marker.props.children.props.latitude !== arr[0] && marker.props.children.props.longitude !== arr[1])\r\n        }))\r\n    }\r\n\r\n    setPinActionAdd(){\r\n        this.setState({\r\n            pinAction: PinAction.ADD\r\n        })\r\n    }\r\n\r\n    setPinActionDelete(){\r\n        this.setState({\r\n            pinAction: PinAction.DELETE\r\n        })\r\n    }\r\n\r\n    setPinActionUpdate(){\r\n        this.setState({\r\n            pinAction: PinAction.UPDATE\r\n        })\r\n    }\r\n\r\n    mapClickHandler(){\r\n        if(this.state.pinAction === PinAction.ADD){\r\n            alert(\"Send to add method\")\r\n        }\r\n        if(this.state.pinAction === PinAction.DELETE){\r\n            alert(\"Send to delete method\")\r\n        }\r\n        if(this.state.pinAction === PinAction.UPDATE){\r\n            alert(\"Send to update method\")\r\n        }\r\n    }\r\n    \r\n    public render() {\r\n        const { viewport } = this.state;\r\n         return (\r\n             <span>\r\n                 <button className=\"btn btn-danger\" onClick={this.setPinActionAdd} style={{marginTop: \"10px\", marginRight: \"10px\"}} type=\"button\">Add</button>\r\n                 <button className=\"btn btn-danger\" onClick={this.setPinActionDelete} style={{marginTop: \"10px\", marginRight: \"10px\"}} type=\"button\">Delete</button>\r\n                 <button className=\"btn btn-danger\" onClick={this.setPinActionUpdate} style={{marginTop: \"10px\", marginRight: \"10px\"}} type=\"button\">Update</button>\r\n                 <span>TRACKED ENUM VALUE: {this.state.pinAction}</span>\r\n                 <button className=\"btn btn-danger\" onClick={this.mapClickHandler} style={{marginTop: \"10px\", marginLeft: \"10px\"}} type=\"button\">Map Click!</button>\r\n                <ReactMapGL\r\n                        {...viewport}\r\n                        className=\"map-size\"\r\n                        mapboxApiAccessToken={MAPBOX_TOKEN}\r\n                        onViewportChange={(v: Viewport) => this.updateViewport(v)}\r\n                        onClick={(event: MapEvent) => this.addPin(event)}\r\n                    >\r\n                        {this.state.markers}\r\n                        <div>\r\n                            <NavigationControl onViewportChange={this.updateViewport} />\r\n                        </div>\r\n                    </ReactMapGL>\r\n                </span>\r\n            );\r\n        }\r\n    }","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport userStore from '../store/UserStore';\r\nimport * as UserActions from '../store/actions/userActions';\r\nimport { User } from '../viewModels/UserWithErrorMessage';\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\n// defines the type of the state\r\ninterface NavState {\r\n    username: string;\r\n}\r\n\r\nexport default class NavBar extends React.Component<IProps, NavState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.clearUsername = this.clearUsername.bind(this);\r\n        this.state = {\r\n            username: '',\r\n        }\r\n    }\r\n\r\n    clearUsername(){\r\n        localStorage.removeItem(\"user\");\r\n        this.setState({\r\n            username: \"\"\r\n        });\r\n        var user = new User();\r\n        user.username = '';\r\n        UserActions.setUser(user);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.setState({\r\n        //     username: localStorage.getItem(\"user\")+''\r\n        // })\r\n        userStore.on(\"change\", () => {\r\n            var name = userStore.getUser()?.username;\r\n            if (name == undefined) {\r\n                name = '';\r\n            }\r\n            this.setState({\r\n                username: name\r\n            })\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <nav className=\"container topnav navbar navbar-dark bg-dark navbar-expand-lg\">\r\n                <NavLink to=\"/\" className=\"main_title navbar-brand\">MapPin</NavLink>\r\n                <div className=\"collpase navbar-collapse\">\r\n                {this.state.username == '' &&\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"navbar-item\">\r\n                            <NavLink style={{color: 'white'}} to=\"/contact\" className=\"nav-link\">Contact Us </NavLink>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <NavLink style={{color: 'white'}} to=\"/register\" className=\"nav-link\">Register</NavLink>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <NavLink style={{color: 'white'}} to=\"/login\" className=\"nav-link\">Log-In</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                }\r\n                {this.state.username != '' &&\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"navbar-item\">\r\n                            <NavLink style={{color: 'white'}} to=\"/contact\" className=\"nav-link\">Contact Us </NavLink>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <NavLink style={{color: 'white'}} to=\"/login\" className=\"nav-link\" onClick={this.clearUsername}> Logout {this.state.username}</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                }\r\n                    \r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport default class EditPin extends Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button variant=\"success\">Edit Your Pins!</Button>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Map from './map.component';\r\nimport EditPin from './edit-pin.component';\r\nimport { Redirect } from 'react-router-dom';\r\nimport userStore from '../store/UserStore';\r\nimport * as UserActions from '../store/actions/userActions';\r\nimport axios from 'axios';\r\nimport { User } from '../viewModels/UserWithErrorMessage';\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\n// defines the type of the state\r\ninterface HomeState {\r\n    username: string | undefined;\r\n}\r\n\r\nexport default class Home extends React.Component<IProps, HomeState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            username: userStore.getUser()?.username\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        userStore.on(\"change\", () => {\r\n            let name = userStore.getUser()?.username;\r\n            if (name == undefined) {\r\n                console.log(\"home name is undefined - in if\")\r\n                this.setState({\r\n                    username: ''\r\n                });\r\n            }\r\n            else{\r\n                console.log(\"home set the state\");\r\n                this.setState({\r\n                    username: name\r\n                });\r\n                console.log(\"home state: \" + this.state.username);\r\n            }\r\n            \r\n        });\r\n    }\r\n\r\n    getUserFromLocalStorage(username: string){\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        console.log(\"getting user from local storage\")\r\n        axios.get<User>(`${path}/users/username/${username}`)\r\n            .then(result => {\r\n                console.log(\"result from getting user from local storage: \" + result.data);\r\n                UserActions.setUser(result.data);\r\n                console.log(userStore.getUser);\r\n            })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    render(){\r\n        if ((this.state.username == \"\" \r\n        || this.state.username == undefined \r\n        || this.state.username == null)\r\n        && localStorage.getItem(\"user\") == null) {\r\n            return (\r\n                <Redirect push to='/register' />\r\n            );\r\n        }\r\n        else {\r\n            var username = localStorage.getItem(\"user\");\r\n            if(username != null && userStore.getUser() == null){\r\n                this.getUserFromLocalStorage(username);\r\n            }\r\n            return (\r\n                <div id=\"mapbox\" className=\"text-center\">\r\n                        <EditPin></EditPin>\r\n                        <Map></Map>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React, { Component, TextareaHTMLAttributes } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { UserWithErrorMessage } from '../viewModels/UserWithErrorMessage';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport * as UserActions from '../store/actions/userActions';\r\n\r\n// defines the type of the props, if any. could also pass in {}\r\ninterface IProps {\r\n\r\n}\r\n\r\n// defines the type of the state\r\ninterface RegisterState {\r\n    username: string;\r\n    password: string;\r\n    redirect: boolean;\r\n    usernameError: string;\r\n}\r\n\r\nclass RegisterUser extends React.Component<IProps, RegisterState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    \r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            redirect: false,\r\n            usernameError: ''\r\n        }\r\n    }\r\n\r\n    onChangeUsername(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            username: target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            password: target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(event: React.FormEvent){\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        event.preventDefault();\r\n        this.setState({\r\n            usernameError: ''\r\n        })\r\n        const MySwal = withReactContent(Swal);\r\n        const user = { \r\n            username: this.state.username, \r\n            password: this.state.password \r\n        }\r\n        try{\r\n            axios.post<UserWithErrorMessage>(path+'/users/add', user)\r\n            .then(result => {\r\n                console.log(result.data)\r\n                if(result.data.error !== \"\"){\r\n                    if(result.data.error.includes(\"username is taken\")){\r\n                        this.setState({usernameError: result.data.error});\r\n                    }\r\n                    else {\r\n                        return MySwal.fire(<p>Login Failed</p>,<span>{result.data.error}</span>, \"error\");\r\n                    }\r\n                }\r\n                else if(result.data.user === null){\r\n                    return MySwal.fire(<p>Registration Failed</p>,<span>unexpected error occured</span>, \"error\");\r\n                }\r\n                else{\r\n                    UserActions.setUser(result.data.user);\r\n                    localStorage.setItem('user', result.data.user.username);\r\n                    this.setState({\r\n                        redirect: true\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n        catch (err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\" style={{marginLeft: 'auto', marginRight: 'auto', width: '30%'}}>\r\n                { this.state.redirect ? (<Redirect push to='/'/>) : null }\r\n                <h3>Create Account</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\"> \r\n                    <label>Username: </label>\r\n                    <input  type=\"text\"\r\n                        style={{width: '90%'}}\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.username}\r\n                        onChange={this.onChangeUsername}\r\n                        />\r\n                        {this.state.usernameError.length > 0 &&\r\n                        <div style={{color: 'red', fontWeight: 'bold', paddingBottom: '10px'}}>\r\n                            {this.state.usernameError}\r\n                        </div>\r\n                    }\r\n                    <label>Password: </label>\r\n                    <input  type=\"password\"\r\n                        style={{width: '90%'}}\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChangePassword}\r\n                        />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"submit\" value=\"Register\" className=\"btn btn-primary\" />\r\n                </div>\r\n                </form>\r\n            </div>\r\n        );      \r\n    }\r\n}\r\n\r\nexport default RegisterUser;","import React, { Component, TextareaHTMLAttributes } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { UserWithErrorMessage } from '../viewModels/UserWithErrorMessage';\r\nimport * as UserActions from '../store/actions/userActions';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\n// defines the type of the props, if any. could also pass in {}\r\ninterface IProps {\r\n\r\n}\r\n\r\n// defines the type of the state\r\ninterface LoginState {\r\n    username: string;\r\n    password: string;\r\n    users: { _id: string, username: string, password: string } [];\r\n    redirect: boolean;\r\n    wrongUsername: string;\r\n    wrongPassword: string;\r\n}\r\n\r\nclass LoginUser extends React.Component<IProps, LoginState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        \r\n\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    \r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            users: [],\r\n            redirect: false,\r\n            wrongUsername: '',\r\n            wrongPassword: ''\r\n        }\r\n    }\r\n\r\n    onChangeUsername(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            username: target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            password: target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(event: React.FormEvent){\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        event.preventDefault();\r\n        this.setState({wrongPassword: \"\", wrongUsername: \"\"});\r\n\r\n        const user = { \r\n            username: this.state.username, \r\n            password: this.state.password \r\n        }\r\n\r\n        axios.post<UserWithErrorMessage>(path+'/users/login', user)\r\n            .then(result => {\r\n                console.log(result);\r\n                if(result.data.error !== \"\"){\r\n                    if(result.data.error.includes(\"Username\")){\r\n                        this.setState({wrongUsername: result.data.error});\r\n                    }\r\n                    if(result.data.error.includes(\"Password\")){\r\n                        this.setState({wrongPassword: result.data.error});\r\n                    }\r\n                }\r\n                else if(result.data.user === null){\r\n                    const MySwal = withReactContent(Swal);\r\n                    return MySwal.fire(<p>Login Failed</p>,<span>User was not found</span>, \"error\");\r\n                }\r\n                else{\r\n                    UserActions.setUser(result.data.user);\r\n                    localStorage.setItem('user', result.data.user?.username);\r\n                    this.setState({\r\n                        redirect: true\r\n                    });\r\n                }\r\n            })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\" style={{marginLeft: 'auto', marginRight: 'auto', width: '30%'}}>\r\n                { this.state.redirect ? (<Redirect to={{pathname: \"/\" }}/>) : null }\r\n                <h3>Sign in to Your Account</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\"> \r\n                    <label>Username: </label>\r\n                    <input  type=\"text\"\r\n                        style={{width: '90%'}}\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.username}\r\n                        onChange={this.onChangeUsername}\r\n                        />\r\n                    {this.state.wrongUsername.length > 0 &&\r\n                        <div style={{color: 'red', fontWeight: 'bold', paddingBottom: '10px'}}>\r\n                            {this.state.wrongUsername}\r\n                        </div>\r\n                    }\r\n                    <label>Password: </label>\r\n                    <input  type=\"password\"\r\n                        style={{width: '90%'}}\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChangePassword}\r\n                        />\r\n                    {this.state.wrongPassword.length > 0 &&\r\n                        <div style={{color: 'red', fontWeight: 'bold', paddingBottom: '10px'}}>\r\n                            {this.state.wrongPassword}\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\" />\r\n                </div>\r\n                </form>\r\n            </div>\r\n        );      \r\n    }\r\n}\r\n\r\nexport default LoginUser;","import axios from 'axios';\r\nimport React from 'react';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\n// defines the type of the props, if any. could also pass in {}\r\ninterface IProps {\r\n\r\n}\r\n\r\n// defines the type of the state\r\nclass ContactState {\r\n    firstName = \"\";\r\n    lastName = \"\";\r\n    email = \"\";\r\n    message = \"\";\r\n    status= \"\";\r\n}\r\n\r\nclass ContactUs extends React.Component<IProps, ContactState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\r\n        this.onChangeLastName = this.onChangeLastName.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangeMessage = this.onChangeMessage.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            message: '',\r\n            status: \"Submit\"\r\n        }\r\n\r\n    }\r\n\r\n    onChangeFirstName(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            firstName: target.value\r\n        });\r\n    }\r\n\r\n    onChangeLastName(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            lastName: target.value\r\n        });\r\n    }\r\n\r\n    onChangeEmail(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            email: target.value\r\n        });\r\n    }\r\n\r\n    onChangeMessage(event: React.FormEvent<HTMLTextAreaElement>) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({\r\n            message: target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(event: React.FormEvent){\r\n        var path=\"\";\r\n        if(process.env.NODE_ENV === \"development\"){ path = \"http://localhost:5000\"}\r\n        event.preventDefault();\r\n        const MySwal = withReactContent(Swal)\r\n        this.setState({ status: \"Sending\" });  \r\n        axios({\r\n          method: \"POST\",\r\n          url: path+\"/users/contact\",\r\n          data: this.state,\r\n        }).then((response) => {\r\n          if (response.data.status === \"sent\") {\r\n            this.setState({ firstName: \"\", lastName: \"\", email: \"\", message: \"\", status: \"Submit\" });\r\n            return MySwal.fire(<p>Message Sent!</p>,<span>Thank you for your email, we look forward to hearing from you!</span>, \"success\");\r\n          } else if (response.data.status === \"failed\") {\r\n            return MySwal.fire(<p>Message Failed!</p>,<span>Uh oh! Something went wrong and we did not recieve your message</span>, \"error\");\r\n          }\r\n        });\r\n      }\r\n\r\n    render(){\r\n        let buttonText = this.state.status;\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"title\">\r\n                    <h1 className=\"page_title\">Contact the&nbsp;</h1>\r\n                    <h1 className=\"main_title\">Map-Pin</h1>\r\n                    <h1 className=\"page_title\">&nbsp;Team</h1>\r\n                </div>\r\n                <div style={{marginTop: \"18px\"}}>\r\n                <div className=\"inner_navcontainer\">\r\n                    <div className=\"inner_contactcontainer\">\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <label htmlFor=\"fname\">First Name</label>\r\n                            <input type=\"text\" \r\n                            id=\"fname\" \r\n                            name=\"firstname\" \r\n                            placeholder=\"Your first name...\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.firstName}\r\n                            onChange={this.onChangeFirstName}></input>\r\n\r\n                            <label htmlFor=\"lname\">Last Name</label>\r\n                            <input type=\"text\" \r\n                            id=\"lname\" \r\n                            name=\"lastname\" \r\n                            placeholder=\"Your last name...\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.lastName}\r\n                            onChange={this.onChangeLastName}></input>\r\n\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                            <input type=\"email\" \r\n                            id=\"email\" \r\n                            name=\"email\" \r\n                            placeholder=\"Your e-mail...\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.email}\r\n                            onChange={this.onChangeEmail}></input>\r\n\r\n                            <label htmlFor=\"message\">What do you need to share?</label>\r\n                            <textarea id=\"message\" \r\n                            name=\"message\" \r\n                            placeholder=\"Write your message here...\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.message}\r\n                            onChange={this.onChangeMessage}></textarea>\r\n\r\n                            <button type=\"submit\" style={{marginTop: \"20px\"}}>{buttonText}</button>\r\n                            \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );      \r\n    }\r\n}\r\n\r\nexport default ContactUs;","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nimport Navbar from \"./components/navbar.component\";\r\nimport Home from \"./components/home.component\";\r\nimport RegisterUser from \"./components/register-user.component\";\r\nimport LoginUser from \"./components/login-user.component\";\r\nimport ContactUs from \"./components/contact.component\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <br/>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/register\" exact component={RegisterUser} />\r\n      <Route path=\"/login\" exact component={LoginUser} />\r\n      <Route path=\"/contact\" exact component={ContactUs} />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}